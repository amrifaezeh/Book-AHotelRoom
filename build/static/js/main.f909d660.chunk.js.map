{"version":3,"sources":["components/ToggleButton.js","components/RoomType.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["ToggleButton","children","className","toggleClassName","onClick","defaultState","toggle","buttonClass","text","reducerFunction","useCallback","preState","dispatchData","console","log","newState","useReducer","button","dispatchButton","data","RoomType","roomType","roomsInfo","onBook","roomTypeLabel","map","_","key","id","bedType","bedTypeLabel","join","trim","accommodateText","accomodationTitle","boardCodeDescription","hasBreakfast","isNonRefundable","isRefundable","totalPrice","add","handleClick","Navbar","items","href","role","data-toggle","length","aria-labelledby","e","preventDefault","handleItemClick","name","reduce","p","c","App","props","roomInfo","TestData","a","b","push","roomTypes","Object","keys","useState","bookedHotel","bookAHotel","handleBooking","rt","newBooking","filter","x","oldBooking","removeBooking","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f909d660.chunk.js","sourcesContent":["import React, { useReducer, useCallback } from \"react\";\r\n\r\nconst ToggleButton = ({ children, className, toggleClassName = \"btn-warning\", onClick }) => {\r\n    const f= ()=>{};\r\n    onClick= onClick || f;\r\n    const defaultButtonClass = \"btn-primary\";\r\n    const defaultState = { toggle: false, buttonClass: defaultButtonClass, text: children };\r\n    const reducerFunction=useCallback((preState, dispatchData) => { \r\n        console.log('log');\r\n               \r\n        if (!preState.toggle) {\r\n\r\n            const newState = {\r\n                toggle: true,\r\n                buttonClass: toggleClassName,\r\n                text: (<span> {preState.text} <i className=\"fas fa-times-circle\"></i></span>)\r\n            }            \r\n            onClick(newState.toggle);\r\n            return newState;\r\n\r\n        } else {\r\n            \r\n            onClick(defaultState.toggle);\r\n            return defaultState;\r\n        }\r\n    },[]);\r\n    const [button, dispatchButton] = useReducer(reducerFunction,defaultState);\r\n\r\n    const handleClick=() =>{\r\n        \r\n        dispatchButton({ data: \"hi\" })\r\n        \r\n    };\r\n    return (\r\n        <button className={`btn ${button.buttonClass} ${className}`}\r\n            onClick={handleClick}\r\n        >{button.text}</button>\r\n    )\r\n}\r\n\r\nexport default ToggleButton;","import React, {useCallback} from \"react\";\r\nimport ToggleButton from \"./ToggleButton\";\r\nimport \"./RoomType.css\";\r\n\r\nconst RoomType = ({ roomType, roomsInfo, onBook }) => {\r\n\r\n  roomsInfo = roomsInfo || [{\r\n    \"id\": \"57034fac-c335-4b61-9ab8-b4ea3d4b9e97\",\r\n    \"groupKey\": \"Double\",\r\n    \"name\": \"Double Room - Economy\",\r\n    \"description\": \"Double Room - Economy\",\r\n    \"totalPrice\": 224.47,\r\n    \"price\": 224.47,\r\n    \"promoPrice\": 0,\r\n    \"b2CPrice\": 0,\r\n    \"savingPercent\": 0,\r\n    \"boardCode\": \"1360\",\r\n    \"boardCodeDescription\": \"All Inclusive\",\r\n    \"hotelId\": \"FR37525\",\r\n    \"isNonRefundable\": false,\r\n    \"canHoldBooking\": true,\r\n    \"facilities\": {},\r\n    \"images\": null,\r\n    \"specialOffers\": [],\r\n    \"surcharges\": null,\r\n    \"nightlyRates\": null,\r\n    \"cancelFreeBeforeDate\": \"2018-09-07T23:59:00\",\r\n    \"roomCancelCharges\": [\r\n      {\r\n        \"DateFrom\": \"2018-08-29T09:51:00\",\r\n        \"DateTo\": \"2018-09-08T23:59:00\",\r\n        \"Amount\": 0\r\n      },\r\n      {\r\n        \"DateFrom\": \"2018-09-08T23:59:00\",\r\n        \"DateTo\": \"2018-09-15T23:59:00\",\r\n        \"Amount\": 66.68\r\n      },\r\n      {\r\n        \"DateFrom\": \"2018-09-15T23:59:00\",\r\n        \"DateTo\": \"2018-09-16T23:59:00\",\r\n        \"Amount\": 111.13\r\n      }\r\n    ],\r\n    \"hasBreakfast\": false,\r\n    \"debugInfos\": [\r\n      {\r\n        \"Key\": \"SearchRequestId\",\r\n        \"Value\": \"789e264573734ebdb44c3b0d454980e1\"\r\n      }\r\n    ],\r\n    \"accommodateText\": [\r\n      \"Hotel\"\r\n    ],\r\n    \"bedTypeLabel\": [\r\n      \"Double\"\r\n    ],\r\n    \"roomTypeLabel\": [\r\n      \"run of the house\"\r\n    ],\r\n    \"viewLabel\": [\r\n      \"not specified\"\r\n    ],\r\n    \"isVisible\": true,\r\n    \"selected\": false\r\n  }];\r\n\r\n\r\n  const hasBreakfast = (_) => {\r\n    if (_.boardCodeDescription === \"Breakfast\" || _.boardCodeDescription === \"All Inclusive\") {\r\n      return <li>Breakfast <i className=\"fas fa-coffee\"></i></li>;\r\n    }\r\n  };\r\n\r\n  const isRefundable = (_) => {\r\n    if (_.isNonRefundable === false) {\r\n      return <li>Refundable <i className=\"far fa-money-bill-alt\"></i></li>;\r\n    }\r\n  }\r\n\r\n  const accomodationTitle = (_) => {\r\n    let bedType = _.bedTypeLabel.join('-');\r\n    if (bedType.trim() !== \"\") {\r\n      bedType = `| ${bedType}`;\r\n    }\r\n    return `${_.accommodateText} ${bedType}`\r\n  }\r\n\r\n  const handleClick=(id, add)=>onBook(id, add);\r\n  roomType = roomType || roomsInfo[0].roomTypeLabel;\r\n\r\n  return (\r\n\r\n    <div className=\"row box mt-3\">\r\n      <div className=\"col-3\">\r\n        {roomType}\r\n      </div>\r\n      <div className=\"col-9\">\r\n        {roomsInfo.map((_) =>\r\n          <div className=\"row mt-1\" key={_.id}>\r\n            <div className=\"col-9 item\">\r\n              <span>{accomodationTitle(_)}</span>\r\n              <ul className=\"options\">\r\n                {hasBreakfast(_)}\r\n                {isRefundable(_)}\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-3 d-flex justify-content-around item p-1 align-items-center\">\r\n              {_.totalPrice}\r\n              <ToggleButton className=\"btn-sm\" onClick={(add)=> handleClick(_.id, add)}>Book</ToggleButton>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default RoomType;","import React, {useCallback} from \"react\";\r\n\r\nconst Navbar = ({items}) => {\r\n    items=items|| [];\r\n    \r\n    const handleItemClick=(e, id)=>{\r\n        e.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                <ul className=\"navbar-nav\">\r\n                    \r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"/\"  role=\"button\" data-toggle=\"dropdown\" >\r\n                            Dropdown link  <span className=\"badge badge-danger\">{items.length}</span>\r\n                        </a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                        \r\n                            {items.map(_=>\r\n                                <a className=\"dropdown-item\" key={_.id} onClick={(e)=>handleItemClick(e, _.id)} href=\"/\">{_.name}</a>\r\n                                )}\r\n                                <hr/>\r\n                                <a className=\"dropdown-item\" href=\"/\">cost {items.reduce((p,c)=> p+c.totalPrice, 0)}</a>\r\n                                \r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>);\r\n};\r\n\r\n\r\nexport default Navbar;","import React,{useState} from 'react';\r\nimport RoomType from \"./components/RoomType\";\r\n//because i plan to have this hosted on github page, so i won't use axios\r\nimport TestData from \"./test-data/test\";\r\nimport Navbar from './components/Navbar';\r\n\r\nfunction App() {\r\n\r\n\r\n  function groupBy(list, props) {\r\n    return list.reduce((a, b) => {\r\n       (a[b[props]] = a[b[props]] || []).push(b);\r\n       return a;\r\n    }, {});\r\n  }\r\n  const roomInfo=groupBy(TestData, 'roomTypeLabel');\r\n  const roomTypes= Object.keys(roomInfo);\r\n  const [bookedHotel, bookAHotel]=useState([]);\r\n  \r\n  const removeBooking=(id)=>bookAHotel(oldBooking=> oldBooking.filter(x=>x.id!==id))  ;\r\n  const handleBooking=(rt, id, add)=>{\r\n   \r\n    if (!add){\r\n      removeBooking(id);\r\n      return;\r\n    }\r\n\r\n    const newBooking= roomInfo[rt].filter(x=> x.id===id);\r\n    bookAHotel(oldBooking=>[...oldBooking, ...newBooking]);\r\n\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Navbar items={bookedHotel}/>\r\n      <div className=\"container\">\r\n      {roomTypes.map(rt=> <RoomType key={rt} roomType={rt} roomsInfo={roomInfo[rt]} onBook={(id, add)=>handleBooking(rt, id, add)}/>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}